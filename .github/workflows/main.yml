name: ARM-test
on: [push]
jobs:
  build:
    name: Build
    runs-on: self-hosted
    #runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set foobar to cool
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.foo.bar = "cool"' 'config.yml'
      - name: Get an entry with a variable that might contain dots or spaces
        id: get_username
        uses: mikefarah/yq@master
        with:
          cmd: yq '.all.children.["${{ matrix.ip_address }}"].username' ops/inventories/production.yml
      - name: Reuse a variable obtained in another step
        run: echo ${{ steps.get_username.outputs.result }}
        
#      - name: Metrics embed
#        uses: lowlighter/metrics@v3.32
#        with:
#          token: ${{ secrets.METRICS_TOKEN }}

#      - name: TruffleHog OSS
#        uses: trufflesecurity/trufflehog@main
#        with:
#          # Repository path
#          path: ./
#          base: main
#          extra_args: --debug
#      - name: Lint Code Base
#        uses: github/super-linter@v4
#        env:
#          VALIDATE_ALL_CODEBASE: false
#          DEFAULT_BRANCH: sandbox
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Build an image from Dockerfile
#        run: |
#          docker build -t docker.io/my-organization/my-app:${{ github.sha }} .
#      - name: Run Trivy vulnerability scanner
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: 'docker.io/my-organization/my-app:${{ github.sha }}'
#          format: 'table'
#          exit-code: '1'
#          ignore-unfixed: true
#          vuln-type: 'os,library'
#          severity: 'CRITICAL,HIGH'
